{"version":3,"sources":["components/ContactList/ContactItem/ContactItem.module.css","components/App/App.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-action.js","redux/contacts/contacts-selector.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/App/App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","setContacts","chengeFilter","e","target","value","getContacts","state","contacts","items","getFilter","filter","Filter","useSelector","dispatch","useDispatch","className","s","input","type","onChange","action","ContactForm","useState","setName","setNumber","handleNameChenge","form","onSubmit","preventDefault","text","pattern","title","required","btn","ContactItem","contactName","contactNumber","contactBtn","onClick","ContactList","contactList","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","map","App","useEffect","contactsRepositiry","JSON","parse","localStorage","getItem","setItem","stringify","container","createReducer","some","el","alert","_","contactsReducer","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e290e259.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactName\":\"ContactItem_contactName__xGeAH\",\"contactNumber\":\"ContactItem_contactNumber__YfEWP\",\"contactBtn\":\"ContactItem_contactBtn__2s6lE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1SJ9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__JIcAf\",\"contact\":\"ContactList_contact__27Njx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3Uhzm\"};","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/Add', (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction('contact/Delete');\n\nexport const setContacts = createAction('contacts/Set');\n\nexport const chengeFilter = createAction('contacts/Filter', e => ({\n  payload: e.target.value,\n}));\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport * as action from '../../redux/contacts/contacts-action';\nimport { getFilter } from '../../redux/contacts/contacts-selector';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => dispatch(action.chengeFilter(e))}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as action from '../../redux/contacts/contacts-action';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleNameChenge = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(action.addContact(name, number));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <p className={s.text}>Name</p>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleNameChenge}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n      <p className={s.text}>Number</p>\n      <input\n        className={s.input}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleNameChenge}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n      />\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch } from 'react-redux';\nimport * as action from '../../../redux/contacts/contacts-action';\nimport PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <p className={s.contactName}>{name}:</p>\n      <p className={s.contactNumber}>{number}</p>\n      <button\n        className={s.contactBtn}\n        onClick={() => dispatch(action.deleteContact(id))}\n      >\n        delete\n      </button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from '../../redux/contacts/contacts-selector';\nimport s from './ContactList.module.css';\nimport ContactItem from './ContactItem';\n\nconst ContactList = () => {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <ul className={s.contactList}>\n      {getVisibleContacts().map(({ id, name, number }) => (\n        <li key={id} className={s.contact}>\n          <ContactItem id={id} name={name} number={number} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as action from '../../redux/contacts/contacts-action';\nimport { getContacts } from '../../redux/contacts/contacts-selector';\nimport s from './App.module.css';\nimport Filter from '../Filter';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\n\nconst App = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const contactsRepositiry = JSON.parse(localStorage.getItem('contacts'));\n    if (contactsRepositiry) {\n      dispatch(action.setContacts(contactsRepositiry));\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as action from './contacts-action';\n\nconst items = createReducer([], {\n  [action.addContact]: (state, { payload }) => {\n    const checkingContacts = el =>\n      el.name.toLowerCase() === payload.name.toLowerCase();\n    if (state.some(checkingContacts)) {\n      alert(`${payload.name} is alreaby in contacts`);\n      return [...state];\n    }\n    return [...state, payload];\n  },\n\n  [action.deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n\n  [action.setContacts]: (_, { payload }) => [...payload],\n});\n\nconst filter = createReducer('', {\n  [action.chengeFilter]: (_, { payload }) => payload,\n});\n\nconst contactsReducer = combineReducers({\n  filter,\n  items,\n});\n\nexport default contactsReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2R3p4\",\"text\":\"ContactForm_text__2pkSY\",\"input\":\"ContactForm_input__3UyjZ\",\"btn\":\"ContactForm_btn__1LPU4\"};"],"sourceRoot":""}